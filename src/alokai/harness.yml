harness('inviqa/alokai'):
  description: A docker based development environment for Alokai
  harnessLayers:
    - inviqa/docker:v0.4.0
  require:
    services:
      - proxy
    confd:
      - harness:/
---
attributes:
  alokai:
    multistore:
      enabled: false

  node:
    packageManager: yarn
    version: '18'
  
  npm:
    login: true
    registry:
      # username:
      # password:
      # email: # email address ignored but field required
      url: https://registrynpm.storefrontcloud.io
      scope: '@vsf-enterprise'

  services:
    console:
      build:
        from: = 'node:' ~ @('node.version') ~ '-slim'
        args:
          NPM_USER: = @('npm.registry.username')
          NPM_PASS: = @('npm.registry.password')
          NPM_EMAIL: = @('npm.registry.email')
          NPM_REGISTRY: = @('npm.registry.url')
          NPM_SCOPE: = @('npm.registry.scope')
      publish: false
    nginx:
      enabled: true
    relay:
      enabled: false
    middleware:
      enabled: true
      build:
        args:
          NPM_USER: = @('npm.registry.username')
          NPM_PASS: = @('npm.registry.password')
          NPM_EMAIL: = @('npm.registry.email')
          NPM_REGISTRY: = @('npm.registry.url')
          NPM_SCOPE: = @('npm.registry.scope')
      environment:
        ### Commerce
        IS_MULTISTORE_ENABLED: >
          = @('app.build') == 'host' ? 'false'
          : @('alokia.multistore.enabled') ? 'true'
          : false
        # BIGCOMMERCE_API_CLIENT_ID:
        # BIGCOMMERCE_API_URL:
        # BIGCOMMERCE_STORE_ID:

        ### CMS
        # Contentful config
        # CNTF_SPACE:
        # CNTF_ENVIRONMENT: 
      environment_secrets:
        # BIGCOMMERCE_API_CLIENT_SECRET:
        # BIGCOMMERCE_API_ACCESS_TOKEN:
        # BIGCOMMERCE_STORE_GUEST_TOKEN:
        # CNTF_TOKEN:
    nextjs:
      enabled: true
      build:
        args:
          NPM_USER: = @('npm.registry.username')
          NPM_PASS: = @('npm.registry.password')
          NPM_EMAIL: = @('npm.registry.email')
          NPM_REGISTRY: = @('npm.registry.url')
          NPM_SCOPE: = @('npm.registry.scope')

          NEXT_PUBLIC_API_BASE_URL: >
            = @('app.build') == 'host' ? 'http://localhost:4000'
            : @('alokia.multistore.enabled') ? '/api'
            : 'https://' ~ @('hostname') ~ '/api'
          NEXT_PUBLIC_IS_MULTISTORE_ENABLED: >
            = @('app.build') == 'host' ? 'false'
            : @('alokia.multistore.enabled') ? 'true'
            : false

          # Default Image Loader fetch url.
          # For Cloudinary check https://cloudinary.com/documentation/fetch_remote_images#fetch_and_deliver_remote_files
          # NEXT_PUBLIC_IMAGE_LOADER_FETCH_URL: https://res.cloudinary.com/dcqchkrzw/image/fetch/

          # Optional. Will be used when image url will not start with http.
          # For Cloudinary check https://cloudinary.com/documentation/migration#lazy_migration_with_auto_upload
          # NEXT_PUBLIC_IMAGE_LOADER_UPLOAD_URL: https://res.cloudinary.com/vsf-sap/image/upload/
      environment: {} # no NEXT_PUBLIC variables supported for runtime
      environment_secrets:
        # to allow nextjs server-side talking to nginx https locally for middleware routing
        NODE_TLS_REJECT_UNAUTHORIZED: '0'
---
import:
  - harness/config/*.yml
  - harness/attributes/*.yml
  - harness/attributes/environment/={env('MY127WS_ENV','local')}.yml
